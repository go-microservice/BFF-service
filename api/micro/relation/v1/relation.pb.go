// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/micro/relation/v1/relation.proto

package v1

import (
	fmt "fmt"
	v1 "github.com/go-microservice/chatgram/api/micro/user/v1"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type FollowRequest struct {
	// 被关注人uid
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *FollowRequest) Reset()         { *m = FollowRequest{} }
func (m *FollowRequest) String() string { return proto.CompactTextString(m) }
func (*FollowRequest) ProtoMessage()    {}
func (*FollowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c03b647572d6687, []int{0}
}
func (m *FollowRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FollowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FollowRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FollowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowRequest.Merge(m, src)
}
func (m *FollowRequest) XXX_Size() int {
	return m.Size()
}
func (m *FollowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FollowRequest proto.InternalMessageInfo

func (m *FollowRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type FollowReply struct {
}

func (m *FollowReply) Reset()         { *m = FollowReply{} }
func (m *FollowReply) String() string { return proto.CompactTextString(m) }
func (*FollowReply) ProtoMessage()    {}
func (*FollowReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c03b647572d6687, []int{1}
}
func (m *FollowReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FollowReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FollowReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FollowReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowReply.Merge(m, src)
}
func (m *FollowReply) XXX_Size() int {
	return m.Size()
}
func (m *FollowReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowReply.DiscardUnknown(m)
}

var xxx_messageInfo_FollowReply proto.InternalMessageInfo

type UnfollowRequest struct {
	// 被取消关注人uid
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (m *UnfollowRequest) Reset()         { *m = UnfollowRequest{} }
func (m *UnfollowRequest) String() string { return proto.CompactTextString(m) }
func (*UnfollowRequest) ProtoMessage()    {}
func (*UnfollowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c03b647572d6687, []int{2}
}
func (m *UnfollowRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnfollowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnfollowRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnfollowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnfollowRequest.Merge(m, src)
}
func (m *UnfollowRequest) XXX_Size() int {
	return m.Size()
}
func (m *UnfollowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnfollowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnfollowRequest proto.InternalMessageInfo

func (m *UnfollowRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type UnfollowReply struct {
}

func (m *UnfollowReply) Reset()         { *m = UnfollowReply{} }
func (m *UnfollowReply) String() string { return proto.CompactTextString(m) }
func (*UnfollowReply) ProtoMessage()    {}
func (*UnfollowReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c03b647572d6687, []int{3}
}
func (m *UnfollowReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnfollowReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnfollowReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnfollowReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnfollowReply.Merge(m, src)
}
func (m *UnfollowReply) XXX_Size() int {
	return m.Size()
}
func (m *UnfollowReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UnfollowReply.DiscardUnknown(m)
}

var xxx_messageInfo_UnfollowReply proto.InternalMessageInfo

type GetFollowingUserListRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" form:"user_id"`
	LastId string `protobuf:"bytes,2,opt,name=last_id,json=lastId,proto3" json:"last_id,omitempty" form:"last_id"`
	Limit  string `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty" form:"limit"`
}

func (m *GetFollowingUserListRequest) Reset()         { *m = GetFollowingUserListRequest{} }
func (m *GetFollowingUserListRequest) String() string { return proto.CompactTextString(m) }
func (*GetFollowingUserListRequest) ProtoMessage()    {}
func (*GetFollowingUserListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c03b647572d6687, []int{4}
}
func (m *GetFollowingUserListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFollowingUserListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFollowingUserListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetFollowingUserListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFollowingUserListRequest.Merge(m, src)
}
func (m *GetFollowingUserListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetFollowingUserListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFollowingUserListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFollowingUserListRequest proto.InternalMessageInfo

func (m *GetFollowingUserListRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetFollowingUserListRequest) GetLastId() string {
	if m != nil {
		return m.LastId
	}
	return ""
}

func (m *GetFollowingUserListRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

type GetFollowingUserListReply struct {
	HasMore int32      `protobuf:"varint,1,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	LastId  string     `protobuf:"bytes,2,opt,name=last_id,json=lastId,proto3" json:"last_id"`
	Items   []*v1.User `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
}

func (m *GetFollowingUserListReply) Reset()         { *m = GetFollowingUserListReply{} }
func (m *GetFollowingUserListReply) String() string { return proto.CompactTextString(m) }
func (*GetFollowingUserListReply) ProtoMessage()    {}
func (*GetFollowingUserListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c03b647572d6687, []int{5}
}
func (m *GetFollowingUserListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFollowingUserListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFollowingUserListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetFollowingUserListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFollowingUserListReply.Merge(m, src)
}
func (m *GetFollowingUserListReply) XXX_Size() int {
	return m.Size()
}
func (m *GetFollowingUserListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFollowingUserListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetFollowingUserListReply proto.InternalMessageInfo

func (m *GetFollowingUserListReply) GetHasMore() int32 {
	if m != nil {
		return m.HasMore
	}
	return 0
}

func (m *GetFollowingUserListReply) GetLastId() string {
	if m != nil {
		return m.LastId
	}
	return ""
}

func (m *GetFollowingUserListReply) GetItems() []*v1.User {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetFollowerUserListRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" form:"user_id"`
	LastId string `protobuf:"bytes,2,opt,name=last_id,json=lastId,proto3" json:"last_id,omitempty" form:"last_id"`
	Limit  string `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty" form:"limit"`
}

func (m *GetFollowerUserListRequest) Reset()         { *m = GetFollowerUserListRequest{} }
func (m *GetFollowerUserListRequest) String() string { return proto.CompactTextString(m) }
func (*GetFollowerUserListRequest) ProtoMessage()    {}
func (*GetFollowerUserListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c03b647572d6687, []int{6}
}
func (m *GetFollowerUserListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFollowerUserListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFollowerUserListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetFollowerUserListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFollowerUserListRequest.Merge(m, src)
}
func (m *GetFollowerUserListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetFollowerUserListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFollowerUserListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFollowerUserListRequest proto.InternalMessageInfo

func (m *GetFollowerUserListRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetFollowerUserListRequest) GetLastId() string {
	if m != nil {
		return m.LastId
	}
	return ""
}

func (m *GetFollowerUserListRequest) GetLimit() string {
	if m != nil {
		return m.Limit
	}
	return ""
}

type GetFollowerUserListReply struct {
	HasMore int32      `protobuf:"varint,1,opt,name=has_more,json=hasMore,proto3" json:"has_more"`
	LastId  string     `protobuf:"bytes,2,opt,name=last_id,json=lastId,proto3" json:"last_id"`
	Items   []*v1.User `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
}

func (m *GetFollowerUserListReply) Reset()         { *m = GetFollowerUserListReply{} }
func (m *GetFollowerUserListReply) String() string { return proto.CompactTextString(m) }
func (*GetFollowerUserListReply) ProtoMessage()    {}
func (*GetFollowerUserListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c03b647572d6687, []int{7}
}
func (m *GetFollowerUserListReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFollowerUserListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFollowerUserListReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetFollowerUserListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFollowerUserListReply.Merge(m, src)
}
func (m *GetFollowerUserListReply) XXX_Size() int {
	return m.Size()
}
func (m *GetFollowerUserListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFollowerUserListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetFollowerUserListReply proto.InternalMessageInfo

func (m *GetFollowerUserListReply) GetHasMore() int32 {
	if m != nil {
		return m.HasMore
	}
	return 0
}

func (m *GetFollowerUserListReply) GetLastId() string {
	if m != nil {
		return m.LastId
	}
	return ""
}

func (m *GetFollowerUserListReply) GetItems() []*v1.User {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*FollowRequest)(nil), "api.micro.relation.v1.FollowRequest")
	proto.RegisterType((*FollowReply)(nil), "api.micro.relation.v1.FollowReply")
	proto.RegisterType((*UnfollowRequest)(nil), "api.micro.relation.v1.UnfollowRequest")
	proto.RegisterType((*UnfollowReply)(nil), "api.micro.relation.v1.UnfollowReply")
	proto.RegisterType((*GetFollowingUserListRequest)(nil), "api.micro.relation.v1.GetFollowingUserListRequest")
	proto.RegisterType((*GetFollowingUserListReply)(nil), "api.micro.relation.v1.GetFollowingUserListReply")
	proto.RegisterType((*GetFollowerUserListRequest)(nil), "api.micro.relation.v1.GetFollowerUserListRequest")
	proto.RegisterType((*GetFollowerUserListReply)(nil), "api.micro.relation.v1.GetFollowerUserListReply")
}

func init() {
	proto.RegisterFile("api/micro/relation/v1/relation.proto", fileDescriptor_9c03b647572d6687)
}

var fileDescriptor_9c03b647572d6687 = []byte{
	// 724 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0x4f, 0x4f, 0x13, 0x41,
	0x14, 0x67, 0x5a, 0x69, 0x61, 0x0a, 0x42, 0x06, 0x91, 0x5a, 0xb1, 0x6d, 0x36, 0x0d, 0x92, 0x92,
	0xee, 0xd0, 0x7a, 0x31, 0xd5, 0x0b, 0x25, 0x68, 0x9a, 0x80, 0x31, 0x8b, 0x5c, 0xbc, 0x90, 0xed,
	0x76, 0xd8, 0x0e, 0xd9, 0xdd, 0x59, 0x67, 0xa6, 0x45, 0xae, 0x7e, 0x02, 0xa3, 0x89, 0xf1, 0x60,
	0x38, 0xa8, 0x1f, 0xc2, 0x8f, 0xc0, 0x91, 0xc4, 0x8b, 0xa7, 0xc6, 0x80, 0x27, 0x8e, 0x7c, 0x02,
	0xb3, 0x7f, 0x5a, 0xa0, 0x2c, 0x22, 0x07, 0x13, 0x4f, 0x33, 0x3b, 0xef, 0xf7, 0x7e, 0xbf, 0x5f,
	0xdf, 0xbc, 0xd7, 0x81, 0x05, 0xdd, 0xa5, 0xd8, 0xa6, 0x06, 0x67, 0x98, 0x13, 0x4b, 0x97, 0x94,
	0x39, 0xb8, 0x53, 0xee, 0xef, 0x55, 0x97, 0x33, 0xc9, 0xd0, 0xb4, 0xee, 0x52, 0xd5, 0x47, 0xa9,
	0xfd, 0x48, 0xa7, 0x9c, 0x99, 0x35, 0x19, 0x33, 0x2d, 0x82, 0x3d, 0x0e, 0xdd, 0x71, 0x98, 0xf4,
	0x23, 0x22, 0x48, 0xca, 0xcc, 0x9e, 0x52, 0xb7, 0x05, 0xe1, 0x1e, 0xad, 0xb7, 0x86, 0xd1, 0xb4,
	0xc9, 0x4c, 0x86, 0xfd, 0x7d, 0xa3, 0xbd, 0x85, 0xbd, 0xaf, 0x30, 0x12, 0x2c, 0x46, 0xc9, 0x24,
	0x4e, 0x89, 0xb9, 0xc4, 0xd1, 0x5d, 0xda, 0xa9, 0x60, 0xe6, 0xfa, 0xdc, 0x17, 0x75, 0x94, 0x79,
	0x38, 0xfe, 0x84, 0x59, 0x16, 0xdb, 0xd1, 0xc8, 0xab, 0x36, 0x11, 0x12, 0xcd, 0xc0, 0xa4, 0x27,
	0xb4, 0x49, 0x9b, 0x69, 0x90, 0x07, 0xf3, 0x71, 0x2d, 0xe1, 0x7d, 0xd6, 0x9b, 0xca, 0x38, 0x4c,
	0xf5, 0x90, 0xae, 0xb5, 0xab, 0x14, 0xe1, 0xc4, 0x86, 0xb3, 0xf5, 0x77, 0xa9, 0x13, 0x70, 0xfc,
	0x14, 0xeb, 0x25, 0x7f, 0x00, 0xf0, 0xee, 0x53, 0x22, 0x03, 0x3e, 0xea, 0x98, 0x1b, 0x82, 0xf0,
	0x55, 0x2a, 0x64, 0x8f, 0x49, 0x81, 0xb1, 0x90, 0x64, 0xb4, 0x86, 0x4e, 0xba, 0xb9, 0x9b, 0x5b,
	0x8c, 0xdb, 0x55, 0x25, 0x64, 0x57, 0xb4, 0x18, 0x6d, 0xa2, 0x05, 0x98, 0xb4, 0x74, 0x21, 0x3d,
	0xb5, 0xd8, 0x20, 0x30, 0x0c, 0x28, 0x5a, 0xc2, 0xdb, 0xd5, 0x9b, 0x68, 0x0e, 0x0e, 0x5b, 0xd4,
	0xa6, 0x32, 0x1d, 0xf7, 0xa1, 0x93, 0x27, 0xdd, 0xdc, 0x58, 0x08, 0xf5, 0x8e, 0x15, 0x2d, 0x08,
	0x2b, 0x5f, 0x01, 0xbc, 0x13, 0x6d, 0xcc, 0xb5, 0x76, 0xd1, 0x7d, 0x38, 0xd2, 0xd2, 0xc5, 0xa6,
	0xcd, 0x38, 0xf1, 0xcd, 0x0d, 0xd7, 0xc6, 0x8e, 0xbb, 0xb9, 0xfe, 0x99, 0x96, 0x6c, 0xe9, 0x62,
	0x8d, 0x71, 0x82, 0x0a, 0x83, 0xde, 0x52, 0xc7, 0xdd, 0x5c, 0xef, 0xa8, 0x6f, 0xea, 0x21, 0x1c,
	0xa6, 0x92, 0xd8, 0x22, 0x1d, 0xcf, 0xc7, 0xe7, 0x53, 0x95, 0x19, 0xf5, 0xb4, 0x51, 0xfc, 0xbb,
	0xee, 0x94, 0x55, 0x4f, 0xbf, 0x36, 0x7a, 0xdc, 0xcd, 0x05, 0x48, 0x2d, 0x58, 0x94, 0x3d, 0x00,
	0x33, 0x7d, 0x9b, 0x84, 0x0f, 0x96, 0x6f, 0xe1, 0xfc, 0x45, 0x44, 0xd7, 0x30, 0xbc, 0x9c, 0x7f,
	0x53, 0xc7, 0x2f, 0x00, 0xa6, 0x23, 0x0d, 0xfe, 0x4f, 0x65, 0xac, 0x7c, 0xbb, 0x01, 0x27, 0xb4,
	0x70, 0x24, 0xd7, 0x09, 0xef, 0x50, 0x83, 0x20, 0x0e, 0x13, 0x81, 0x6b, 0x54, 0x50, 0x23, 0x07,
	0x57, 0x3d, 0x37, 0x2f, 0x19, 0xe5, 0x0a, 0x94, 0xd7, 0xee, 0xd9, 0x37, 0xdf, 0x7f, 0xbd, 0x8f,
	0xa5, 0x95, 0xa9, 0xb3, 0xff, 0x0e, 0x38, 0x18, 0x88, 0x2a, 0x28, 0xa2, 0x1d, 0x38, 0xd2, 0x9b,
	0x0f, 0x34, 0x77, 0x09, 0xdf, 0xc0, 0xb0, 0x65, 0x0a, 0x57, 0xe2, 0x3c, 0xe5, 0x7b, 0xbe, 0xf2,
	0x8c, 0x32, 0x7d, 0x4e, 0xb9, 0xdd, 0x13, 0xfb, 0x04, 0xe0, 0xad, 0xa8, 0x76, 0x47, 0x95, 0x4b,
	0xd8, 0xff, 0x30, 0xb4, 0x99, 0xc5, 0x6b, 0xe5, 0x9c, 0xa9, 0x0b, 0xba, 0x1d, 0x51, 0x17, 0xea,
	0x98, 0xe8, 0x23, 0x80, 0x53, 0x11, 0x5d, 0x84, 0xca, 0x57, 0x29, 0x5d, 0x18, 0x89, 0x0c, 0xbe,
	0x4e, 0xca, 0x99, 0xca, 0xa1, 0xe9, 0x08, 0x6f, 0x84, 0xd7, 0x3e, 0xc7, 0xde, 0x2d, 0xed, 0x03,
	0xb4, 0x07, 0x60, 0xb2, 0xee, 0x88, 0xfc, 0xd2, 0xf3, 0xba, 0x52, 0x85, 0x29, 0x6f, 0xeb, 0x72,
	0xb6, 0x4d, 0x0c, 0x89, 0x16, 0x5a, 0x52, 0xba, 0xa2, 0x8a, 0xb1, 0x49, 0x65, 0xab, 0xdd, 0x50,
	0x0d, 0x66, 0x63, 0x93, 0x95, 0x7c, 0x0b, 0x22, 0x68, 0x36, 0x81, 0xa9, 0x23, 0x4a, 0xba, 0xeb,
	0x16, 0x35, 0x98, 0x5a, 0xab, 0xbf, 0xc8, 0xaf, 0x52, 0x83, 0x38, 0x82, 0xa0, 0xe5, 0x6b, 0xe4,
	0xe2, 0x86, 0xc5, 0x1a, 0xd8, 0xd6, 0x85, 0x24, 0x1c, 0xaf, 0xd6, 0x97, 0x57, 0x9e, 0xad, 0xaf,
	0xa8, 0xf2, 0xb5, 0xac, 0xc4, 0xcb, 0xea, 0x62, 0x11, 0x80, 0xca, 0xa4, 0xee, 0xba, 0x16, 0x35,
	0x82, 0x1f, 0xb0, 0x2d, 0x98, 0x53, 0xbd, 0x70, 0xb2, 0x7f, 0x98, 0x05, 0x07, 0x87, 0x59, 0xf0,
	0xf3, 0x30, 0x0b, 0xde, 0x1e, 0x65, 0x87, 0x0e, 0x8e, 0xb2, 0x43, 0x3f, 0x8e, 0xb2, 0x43, 0x2f,
	0x1f, 0x5f, 0x6e, 0x00, 0x1b, 0x2d, 0x5d, 0x9a, 0x5c, 0xb7, 0x71, 0xe4, 0x2b, 0xf8, 0xa8, 0x53,
	0x6e, 0x24, 0xfc, 0x37, 0xe6, 0xc1, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x69, 0x64, 0xb7, 0xdc,
	0x28, 0x07, 0x00, 0x00,
}

func (m *FollowRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FollowRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FollowRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UserId != 0 {
		i = encodeVarintRelation(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *FollowReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FollowReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FollowReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *UnfollowRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnfollowRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnfollowRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UserId != 0 {
		i = encodeVarintRelation(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UnfollowReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnfollowReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnfollowReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GetFollowingUserListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFollowingUserListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetFollowingUserListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintRelation(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.LastId) > 0 {
		i -= len(m.LastId)
		copy(dAtA[i:], m.LastId)
		i = encodeVarintRelation(dAtA, i, uint64(len(m.LastId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintRelation(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetFollowingUserListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFollowingUserListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetFollowingUserListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRelation(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.LastId) > 0 {
		i -= len(m.LastId)
		copy(dAtA[i:], m.LastId)
		i = encodeVarintRelation(dAtA, i, uint64(len(m.LastId)))
		i--
		dAtA[i] = 0x12
	}
	if m.HasMore != 0 {
		i = encodeVarintRelation(dAtA, i, uint64(m.HasMore))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetFollowerUserListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFollowerUserListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetFollowerUserListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintRelation(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.LastId) > 0 {
		i -= len(m.LastId)
		copy(dAtA[i:], m.LastId)
		i = encodeVarintRelation(dAtA, i, uint64(len(m.LastId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.UserId) > 0 {
		i -= len(m.UserId)
		copy(dAtA[i:], m.UserId)
		i = encodeVarintRelation(dAtA, i, uint64(len(m.UserId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetFollowerUserListReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFollowerUserListReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetFollowerUserListReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRelation(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.LastId) > 0 {
		i -= len(m.LastId)
		copy(dAtA[i:], m.LastId)
		i = encodeVarintRelation(dAtA, i, uint64(len(m.LastId)))
		i--
		dAtA[i] = 0x12
	}
	if m.HasMore != 0 {
		i = encodeVarintRelation(dAtA, i, uint64(m.HasMore))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintRelation(dAtA []byte, offset int, v uint64) int {
	offset -= sovRelation(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FollowRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovRelation(uint64(m.UserId))
	}
	return n
}

func (m *FollowReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *UnfollowRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserId != 0 {
		n += 1 + sovRelation(uint64(m.UserId))
	}
	return n
}

func (m *UnfollowReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GetFollowingUserListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovRelation(uint64(l))
	}
	l = len(m.LastId)
	if l > 0 {
		n += 1 + l + sovRelation(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovRelation(uint64(l))
	}
	return n
}

func (m *GetFollowingUserListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasMore != 0 {
		n += 1 + sovRelation(uint64(m.HasMore))
	}
	l = len(m.LastId)
	if l > 0 {
		n += 1 + l + sovRelation(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovRelation(uint64(l))
		}
	}
	return n
}

func (m *GetFollowerUserListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovRelation(uint64(l))
	}
	l = len(m.LastId)
	if l > 0 {
		n += 1 + l + sovRelation(uint64(l))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovRelation(uint64(l))
	}
	return n
}

func (m *GetFollowerUserListReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasMore != 0 {
		n += 1 + sovRelation(uint64(m.HasMore))
	}
	l = len(m.LastId)
	if l > 0 {
		n += 1 + l + sovRelation(uint64(l))
	}
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovRelation(uint64(l))
		}
	}
	return n
}

func sovRelation(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRelation(x uint64) (n int) {
	return sovRelation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FollowRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FollowRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FollowRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRelation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FollowReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FollowReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FollowReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRelation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnfollowRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnfollowRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnfollowRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRelation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnfollowReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnfollowReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnfollowReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipRelation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFollowingUserListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFollowingUserListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFollowingUserListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRelation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFollowingUserListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFollowingUserListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFollowingUserListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			m.HasMore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HasMore |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &v1.User{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRelation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFollowerUserListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFollowerUserListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFollowerUserListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRelation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFollowerUserListReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFollowerUserListReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFollowerUserListReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasMore", wireType)
			}
			m.HasMore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HasMore |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRelation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRelation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &v1.User{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRelation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRelation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRelation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRelation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRelation
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRelation
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRelation
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRelation        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRelation          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRelation = fmt.Errorf("proto: unexpected end of group")
)
