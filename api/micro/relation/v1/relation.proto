syntax = "proto3";

package api.micro.relation.v1;

import "google/api/annotations.proto";
import "api/micro/user/v1/user.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/go-microservice/ins-api/api/micro/relation/v1;v1";
// see: https://github.com/grpc-ecosystem/grpc-gateway/blob/2ce32afe5735d0bfa28ee3369e5975dfb8192313/protoc-gen-openapiv2/options/openapiv2.proto
// https://github.com/grpc-ecosystem/grpc-gateway/blob/2ce32afe5735d0bfa28ee3369e5975dfb8192313/examples/internal/proto/examplepb/a_bit_of_everything.proto
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Ins API";
    version: "1.0";
    description: "";
    contact: {
      name: "Ins project";
      url: "https://github.com/go-microservices/ins-app";
      email: "";
    };
    license: {
      name: "MIT License";
      url: "https://github.com/go-microservices/ins-app/blob/master/LICENSE.txt";
    };
  };
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
};

service RelationService {
  rpc Follow(FollowRequest) returns (FollowReply) {
    option (google.api.http) = {
      post: "/v1/relation/follow"
      body: "*"
    };
  }
  rpc Unfollow(UnfollowRequest) returns (UnfollowReply) {
    option (google.api.http) = {
      post: "/v1/relation/unfollow"
    };
  }
  rpc GetFollowingUserList(GetFollowingUserListRequest) returns (GetFollowingUserListReply) {
    option (google.api.http) = {
      get: "/v1/relation/following"
    };
  }
  rpc GetFollowerUserList(GetFollowerUserListRequest) returns(GetFollowerUserListReply) {
    option (google.api.http) = {
      get: "/v1/relation/follower"
    };
  }
}

message FollowRequest {
  // 被关注人uid
  int64 user_id = 1;
}

message FollowReply {
}

message UnfollowRequest {
  // 被取消关注人uid
  int64 user_id = 1;
}

message UnfollowReply {
}

message GetFollowingUserListRequest {
  // @gotags: form:"user_id"
  string id = 1;
  // @gotags: form:"last_id"
  string last_id = 2;
  // @gotags: form:"limit"
  string limit = 3;
}

message GetFollowingUserListReply {
  int32 has_more = 1;
  string last_id = 2;
  repeated micro.user.v1.User items = 3;

}

message GetFollowerUserListRequest {
  // @gotags: form:"user_id"
  string user_id = 1;
  // @gotags: form:"last_id"
  string last_id = 2;
  // @gotags: form:"limit"
  string limit = 3;
}

message GetFollowerUserListReply {
  int32 has_more = 1;
  string last_id = 2;
  repeated micro.user.v1.User items = 3;
}
