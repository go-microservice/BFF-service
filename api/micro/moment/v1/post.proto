syntax = "proto3";

package api.micro.moment.v1;

import "google/api/annotations.proto";
import "api/micro/user/v1/user.proto";
import "gogo/protobuf/gogo.proto";

option go_package = "github.com/go-microservice/ins-api/api/micro/moment/v1;v1";
option java_multiple_files = true;
option java_package = "api.micro.moment.v1";

service PostService {
	rpc CreatePost (CreatePostRequest) returns (CreatePostReply) {
		option (google.api.http) = {
			post: "/v1/posts"
			body: "*"
		};
	};
	rpc UpdatePost (UpdatePostRequest) returns (UpdatePostReply) {
		option (google.api.http) = {
			patch: "/v1/posts"
			body: "*"
		};
	};
	rpc DeletePost (DeletePostRequest) returns (DeletePostReply) {
		option (google.api.http) = {
			delete: "/v1/posts"
			body: "*"
		};
	};
	rpc GetPost (GetPostRequest) returns (GetPostReply) {
		option (google.api.http) = {
			get: "/v1/posts/{id}"
		};
	};
	rpc ListHotPost (ListPostRequest) returns (ListPostReply) {
		option (google.api.http) = {
			get: "/v1/posts/hot"
		};
	};
	rpc ListLatestPost (ListPostRequest) returns (ListPostReply) {
		option (google.api.http) = {
			get: "/v1/posts/latest"
		};
	};
}

message Content {
	string text = 1;
	repeated PostImage images = 2;
	Video video = 3;
}

message PostImage {
	string image_key = 1;
	string image_url = 2;
	string image_type = 3;
	int32 width = 4;
	int32 height = 5;
}

message Video {
	string video_key = 1;
	string video_url = 2;
	string cover_key = 3;
	string cover_url = 4;
	float duration = 5;
	int32 width = 6;
	int32 height = 7;
}

message Post {
	string id = 1 [(gogoproto.jsontag) = "id"];
	int32 post_type = 2 [(gogoproto.jsontag) = "post_type"];
	api.micro.user.v1.User user = 3;
	string title = 4 [(gogoproto.jsontag) = "title"];
	Content content = 5 [(gogoproto.jsontag) = "content"];
	int64 view_count = 6 [(gogoproto.jsontag) = "view_count"];
	int64 like_count = 7 [(gogoproto.jsontag) = "like_count"];
	int64 comment_count = 8 [(gogoproto.jsontag) = "comment_count"];
	int64 collect_count = 9 [(gogoproto.jsontag) = "collect_count"];
	int64 share_count = 10 [(gogoproto.jsontag) = "share_count"];
	float longitude = 11 [(gogoproto.jsontag) = "longitude"];
	float latitude = 12 [(gogoproto.jsontag) = "latitude"];
	float position = 13 [(gogoproto.jsontag) = "position"];
	int64 created_at = 14 [(gogoproto.jsontag) = "created_at"];
	int32 is_like = 15 [(gogoproto.jsontag) = "is_like"];
}

message PostImageRequest {
	string image_key = 1;
	string image_type = 2;
	int32 width = 3;
	int32 height = 4;
}

message CreatePostRequest {
	int64 user_id = 1;
	string title = 2;
	string text = 3;
	// json格式：[{"image_key":"/abc/a.jpg","image_type":"jpg","width":200,"height":200}]
	repeated PostImageRequest images = 4;
	string video_key = 5;
	float video_duration = 6;
	string cover_key = 7;
	int32 cover_width = 8;
	int32 cover_height = 9;
	float longitude = 10;
	float latitude = 11;
	string position = 12;
}
message CreatePostReply {
	Post post = 1;
}

message UpdatePostRequest {}
message UpdatePostReply {}

message DeletePostRequest {
	string id = 1;
	int32 del_flag = 2;
}
message DeletePostReply {}

message GetPostRequest {
	string id = 1 [(gogoproto.moretags) = 'uri:"id"'];
}
message GetPostReply {
	Post post = 1;
}

message ListPostRequest {
	int64 last_id = 1 [(gogoproto.moretags) = 'form:"last_id"'];
	int32 limit = 2 [(gogoproto.moretags) = 'form:"limit"'];
}
message ListPostReply {
	repeated Post items = 1 [(gogoproto.jsontag) = "items"];
	int64 count = 2 [(gogoproto.jsontag) = "count"];
	bool has_more = 3 [(gogoproto.jsontag) = "has_more"];
	string last_id = 4 [(gogoproto.jsontag) = "last_id"];
}
