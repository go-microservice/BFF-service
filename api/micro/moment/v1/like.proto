syntax = "proto3";

package api.micro.moment.v1;

import "google/api/annotations.proto";
import "api/micro/user/v1/user.proto";
import "gogo/protobuf/gogo.proto";

option go_package = "github.com/go-microservice/ins-api/api/micro/moment/v1;v1";
option java_multiple_files = true;
option java_package = "api.micro.moment.v1";

service LikeService {
	rpc CreatePostLike (CreatePostLikeRequest) returns (CreatePostLikeReply) {
		option (google.api.http) = {
			post: "/v1/posts/like"
			body: "*"
		};
	};
	rpc DeletePostLike (DeletePostLikeRequest) returns (DeletePostLikeReply) {
		option (google.api.http) = {
			post: "/v1/posts/dislike"
			body: "*"
		};
	};
	rpc ListPostLike (ListPostLikeRequest) returns (ListPostLikeReply) {
		option (google.api.http) = {
			get: "/v1/posts/likes"
		};
	};
	rpc CreateCommentLike (CreateCommentLikeRequest) returns (CreateCommentLikeReply) {
		option (google.api.http) = {
			post: "/v1/comments/like"
			body: "*"
		};
	};
	rpc DeleteCommentLike (DeleteCommentLikeRequest) returns (DeleteCommentLikeReply) {
		option (google.api.http) = {
			post: "/v1/comments/dislike"
			body: "*"
		};
	};
	rpc ListCommentLike (ListCommentLikeRequest) returns (ListCommentLikeReply) {
		option (google.api.http) = {
			get: "/v1/comments/likes"
		};
	};
}

message Like {
	int64 id = 1;
	api.micro.user.v1.User user = 2;
}

message CreatePostLikeRequest {
	int64 user_id = 1;
	int64 post_id = 2;
}
message CreatePostLikeReply {}

message DeletePostLikeRequest {
	int64 user_id = 1;
	int64 post_id = 2;
}
message DeletePostLikeReply {}

message ListPostLikeRequest {
	int64 post_id = 1 [(gogoproto.moretags) = 'form:"post_id"'];
	int64 last_id = 2 [(gogoproto.moretags) = 'form:"last_id"'];
	int32 limit = 3 [(gogoproto.moretags) = 'form:"limit"'];
}
message ListPostLikeReply {
	repeated Like items = 1 [(gogoproto.jsontag) = "items"];
	int64 count = 2 [(gogoproto.jsontag) = "count"];
	bool has_more = 3 [(gogoproto.jsontag) = "has_more"];
	string last_id = 4 [(gogoproto.jsontag) = "last_id"];
}

message CreateCommentLikeRequest {
	int64 user_id = 1;
	int64 comment_id = 2;
}
message CreateCommentLikeReply {}

message DeleteCommentLikeRequest {
	int64 user_id = 1;
	int64 comment_id = 2;
}
message DeleteCommentLikeReply {}

message ListCommentLikeRequest {
	int64 comment_id = 1 [(gogoproto.moretags) = 'form:"comment_id"'];
	int64 last_id = 2 [(gogoproto.moretags) = 'form:"last_id"'];
	int32 limit = 3 [(gogoproto.moretags) = 'form:"limit"'];
}
message ListCommentLikeReply {
	repeated Like items = 1 [(gogoproto.jsontag) = "items"];
	int64 count = 2 [(gogoproto.jsontag) = "count"];
	bool has_more = 3 [(gogoproto.jsontag) = "has_more"];
	string last_id = 4 [(gogoproto.jsontag) = "last_id"];
}
